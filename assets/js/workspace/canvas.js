// Generated by CoffeeScript 1.7.1
(function() {
  define(["jQuery", "Kinetic", "workspace/assets"], function($, Kinetic, assets) {
    var MOUSE_BUTTON, addImageToSpriteLayer, addSprite, getOriginalImage, init, myDogeCanvasSelector, myStage, saveAsImage, setupBackgroundImage, setupBlinkEyeImage;
    MOUSE_BUTTON = {
      left: 1,
      right: 2
    };
    myDogeCanvasSelector = "doge-canvas";
    myStage = new Kinetic.Stage({
      container: myDogeCanvasSelector,
      width: 675,
      height: 506
    });

    /*
      Add doge image as background to the stage
      @param imageSrc: string   path to the background image asset
     */
    setupBackgroundImage = function(imageSrc) {
      var backgroundImage, backgroundLayer;
      backgroundLayer = new Kinetic.Layer();
      backgroundImage = new Image();
      return $(backgroundImage).on("load", function() {
        var bg;
        bg = new Kinetic.Image({
          x: 0,
          y: 0,
          image: backgroundImage,
          width: myStage.width(),
          height: myStage.height()
        });
        backgroundLayer.add(bg);
        return myStage.add(backgroundLayer);
      }).attr("src", imageSrc);
    };
    setupBlinkEyeImage = function(imageSrc, blinkDelay) {
      var blinkEyeImage, blinkEyeLayer;
      if (blinkDelay == null) {
        blinkDelay = 10000;
      }
      blinkEyeLayer = new Kinetic.Layer();
      blinkEyeImage = new Image();
      return $(blinkEyeImage).on("load", function() {
        blinkEyeImage = new Kinetic.Image({
          x: 307,
          y: 88,
          image: blinkEyeImage,
          width: blinkEyeImage.width,
          height: blinkEyeImage.height
        });
        blinkEyeLayer.add(blinkEyeImage);
        myStage.add(blinkEyeLayer);
        blinkEyeLayer.hide();
        return window.setInterval((function() {
          blinkEyeLayer.show();
          return window.setTimeout((function() {
            return blinkEyeLayer.hide();
          }), 100);
        }), blinkDelay);
      }).attr("src", imageSrc);
    };
    getOriginalImage = function(image) {
      var img;
      return img = image.get(0);
    };

    /*
      Add sprite to the stage
      @param spriteImage: object  jQuery sprite image object
     */
    addSprite = function(spriteImage) {
      var spriteLayer;
      spriteLayer = new Kinetic.Layer();
      if (typeof spriteImage === "object") {
        $("<img/>").on("load", function() {
          return addImageToSpriteLayer(this, spriteLayer);
        }).attr("src", spriteImage.attr("src"));
      } else if (typeof spriteImage === "string") {
        spriteImage = new Image();
        $(spriteImage).on("load", function() {
          return addImageToSpriteLayer(spriteImage, spriteLayer);
        }).attr("src", "" + assets.IMG_DIR + "/sprite-" + spriteImage + ".png");
      } else {
        console.error("Can't add sprite " + spriteImage + " to the " + spriteLayer);
      }
      return spriteLayer.on("mouseover", function() {
        return document.body.style.cursor = "pointer";
      }).on("mouseout", function() {
        return document.body.style.cursor = "default";
      }).on("mouseup", function(e) {
        if (e.evt.button === MOUSE_BUTTON.right) {
          return spriteLayer.remove();
        }
      });
    };

    /*
      @param spriteImage: Image object  image which will be added
      @param spriteLayer: Layer object  layer on which we want to add an image
      @param options: {
               width: number
               height: number
             }
     */
    addImageToSpriteLayer = function(spriteImage, spriteLayer, options) {
      var bg;
      if (!spriteLayer) {
        spriteLayer = new Kinetic.Layer();
      }
      bg = new Kinetic.Image({
        x: 100,
        y: 100,
        image: spriteImage,
        width: (options != null ? options.width : void 0) || spriteImage.width,
        height: (options != null ? options.height : void 0) || spriteImage.height,
        draggable: true
      });
      spriteLayer.add(bg);
      return myStage.add(spriteLayer);
    };
    saveAsImage = function() {
      return myStage.toDataURL({
        callback: function(dataUrl) {
          return window.open(dataUrl);
        }
      });
    };

    /*
      Init canvas settings
     */
    init = function() {
      setupBackgroundImage(assets.DOGE_BG);
      return setupBlinkEyeImage(assets.DOGE_BLINK_EYE);
    };
    init();
    return {
      saveAsImage: saveAsImage,
      addSprite: addSprite,
      canvasSelector: myDogeCanvasSelector
    };
  });

}).call(this);
